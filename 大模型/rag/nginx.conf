
user  root;
worker_processes  auto;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	upstream backend {
		#server 192.168.18.252:8080;
		#server 192.168.18.252:8081;	
		#server 192.168.18.252:8082;	
		#server 192.168.18.252:8083;	
		#server 127.0.0.1:8777;
		server 172.20.219.14:8777;
		#server 192.168.18.252:8085;	
		#server 192.168.18.252:8086;	
		# server 192.168.18.252:8087;	
	}        

#	log_format main escape=json  '{'
#                                '"host": "$host",'
#                                '"request": "$request",'
#                                '"request_body": "$request_body",'
#                                '"response_body": "$response_body"'
#                                '}' ;
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    client_max_body_size 300M;
    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	map $http_upgrade $connection_upgrade {
        	default upgrade;
        	'' close;
	}

#	server {
#	    listen 443 ssl default_server; #这里的default_server要保留
#	    server_name 8.130.16.234;
#		ssl_certificate /usr/local/openresty/nginx/conf/crt/zdyxz.com.pem ; #pem证书路径
#		ssl_certificate_key     /usr/local/openresty/nginx/conf/crt/zdyxz.com.key ; #pem证书key路径
#		ssl_session_timeout     5m; #会话超时时间
#		ssl_ciphers     ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; #加密算法
#		ssl_protocols   TLSv1 TLSv1.1 TLSv1.2; #SSL协议
#	    return 403;
#	}
	
    server {
        listen       80;
	listen [::]:80;
        charset utf-8;
        server_name  8.130.16.234;
        proxy_next_upstream  http_502 http_503 http_504 error timeout ;
        #access_log  logs/host.access.log  main;
        # 记录请求body
 #       lua_need_request_body   on;
        # 记录返回body
  #      set $response_body      "";
 #       body_filter_by_lua_block     {
 #           local chunk = string.sub(ngx.arg[1],1,10000)
 #           ngx.ctx.buffered =  (ngx.ctx.buffered or "")   .. chunk  
 #           ngx.var.response_body = ngx.ctx.buffered
 #       }  

        # ssl_certificate /usr/local/openresty/nginx/conf/crt/zdyxz.com.pem ; #pem证书路径
        # ssl_certificate_key     /usr/local/openresty/nginx/conf/crt/zdyxz.com.key ; #pem证书key路径
        # ssl_session_timeout     5m; #会话超时时间
        # ssl_ciphers     ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4; #加密算法
        # ssl_protocols   TLSv1 TLSv1.1 TLSv1.2; #SSL协议
	    # proxy_set_header   X-Forwarded-Proto $scheme;

       # location / {
       #         proxy_pass  http://localhost:5001/;
       # }
        location / {
            proxy_set_header   Host             $http_host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto http;
            proxy_set_header   X-Forwarded-Port  $server_port;

            add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS,DELETE,PUT,HEAD";
            root /opt/nginx/dist;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
            if ($request_filename ~* .*\.(?:htm|html)$){
                expires -1s;
                add_header Cache-Control "private, no-store, no-cache, must-revalidate, proxy-revalidate";
            }
            if ($request_filename ~* .*\.(?:js|css)$)
            {
                expires 30d;
                add_header Cache-Control public;
            }
            if ($request_filename ~* .*\.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm)$)
            {
                expires 30d;
                add_header Cache-Control public;
            }
        }


        location /ragapi/ {
                auth_request /auth/;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
                proxy_set_header   X-Forwarded-Proto http;
                proxy_set_header   X-Forwarded-Port  $server_port;
                proxy_connect_timeout 600s;
                proxy_buffering off;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
                proxy_pass http://backend/api/;
        }

        location ^~/api {
                auth_request /auth/;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_connect_timeout 600s;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
                proxy_buffering off;
                proxy_pass http://172.20.219.14:8777;
        }

        location /milvus {
                rewrite ^/milvus/(.*) /$1 break;
                proxy_set_header Host $http_host;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_connect_timeout 600s;
                proxy_buffering off;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
                proxy_pass http://172.20.219.14:19530;
        }
        location /attu/ {
                proxy_set_header Host $http_host;
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_connect_timeout 600s;
                proxy_buffering off;
                proxy_send_timeout 600s;
                proxy_read_timeout 600s;
                proxy_pass http://172.20.219.14:8000/;
        }

       # location /minio/cestc-xingzhi-bucket {
       #     proxy_pass http://172.20.219.14:9000;
       # }

        location /minioui {
            rewrite ^/minioui/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            real_ip_header X-Real-IP;
 
            proxy_connect_timeout 900s;
 
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
 
            chunked_transfer_encoding off;
            proxy_pass    http://172.20.219.14:9001;
        }

        location /minioapi/cestc-xingzhi-bucket {
            # auth_request /auth/;
            proxy_send_timeout 900s;
            proxy_read_timeout 900s;
            rewrite ^/minioapi/(.*) /$1 break;
            proxy_set_header Host $http_host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-NginX-Proxy true;
            proxy_set_header   X-Forwarded-Port  $server_port;
            real_ip_header X-Real-IP;

            proxy_connect_timeout 900s;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            chunked_transfer_encoding off;
            proxy_pass    http://172.20.219.14:9000;
        }


        location /auth/ {
                internal;
                proxy_set_header Host $host;
                proxy_pass_request_body off;
                proxy_set_header Content-Length "";
                proxy_http_version 1.1;
                proxy_set_header Connection "";
                proxy_pass http://127.0.0.1:7001/auth;
        }

        location ^~ /queue/join {
                proxy_read_timeout 300s;
                proxy_send_timeout 300s;
                proxy_set_header  Host $http_host;
                proxy_set_header  X-Real-IP  $remote_addr;
                proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header  X-Forwarded-Proto $scheme;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection $connection_upgrade;
                proxy_pass  http://localhost:5001;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }   

    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
